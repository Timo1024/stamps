theme_void() # remove axes and background
# Return the grob
ggplotGrob(p)
}
# Create a split circle grob with your chosen colors
my_grob <- create_half_circle_plot(1, 2)
# Draw the grob
grid.newpage()
grid.draw(my_grob)
create_half_circle_plot <- function(value1, value2) {
# Create a data frame for the small plot
data <- data.frame(
category = c('value1', 'value2'),
value = c(value1, value2)
)
# Create the small plot using geom_col and coord_polar
p <- ggplot(data, aes(x = category, y = value, fill = category)) +
geom_col(width = 1) +
coord_polar(theta = "x", direction = -1) + # start at angle 0 to split the circle in half
theme_void() # remove axes and background
# Return the grob
ggplotGrob(p)
}
# Create a split circle grob with your chosen colors
my_grob <- create_half_circle_plot(1, 2)
# Draw the grob
grid.newpage()
grid.draw(my_grob)
create_half_circle_plot <- function(value1, value2) {
# Create a data frame for the small plot
data <- data.frame(
category = c('value1', 'value2'),
value = c(value1, value2)
)
# Create the small plot using geom_col and coord_polar
p <- ggplot(data, aes(x = category, y = value, fill = category)) +
geom_col(width = 1) +
coord_polar(theta = "x", direction = -1) + # start at angle 0 to split the circle in half
theme_void() # remove axes and background
# Return the grob
ggplotGrob(p)
}
# Create a split circle grob with your chosen colors
my_grob <- create_half_circle_plot(1, 2)
# Draw the grob
grid.newpage()
grid.draw(my_grob)
library(colorRamp2)
install.packages("colorRamp2")
library(colorRamp2)
value1Max <- max(df$value1)
value1Min <- min(df$value1)
value2Max <- max(df$value2)
value2Min <- min(df$value2)
colorRampV1 <- colorRamp2(c(value1Min, value1Max), c("red", "white"), transparency = 0, space = "LAB",
hcl_palette = NULL, reverse = FALSE)
colorRampV2 <- colorRamp2(c(value2Min, value2Max), c("blue", "white"), transparency = 0, space = "LAB",
hcl_palette = NULL, reverse = FALSE)
colorRampV1(0.5)
colorRampV1(0.1)
create_half_circle_plot <- function(value1, value2, colorRampV1, colorRampV2) {
# Create a data frame for the small plot
data <- data.frame(
category = c('value1', 'value2'),
value = c(value1, value2)
)
# Create the small plot using geom_col and coord_polar
p <- ggplot(data, aes(x = category, y = c(1,1), fill = c(colorRampV1(value1), colorRampV2(value2)))) +
geom_col(width = 1) +
coord_polar(theta = "x", direction = -1) + # start at angle 0 to split the circle in half
theme_void() # remove axes and background
# Return the grob
ggplotGrob(p)
}
my_grob <- create_half_circle_plot(1, 4)
# Create a split circle grob with your chosen colors
my_grob <- create_half_circle_plot(1, 4, colorRampV1, colorRampV2)
# Draw the grob
grid.newpage()
grid.draw(my_grob)
create_half_circle_plot <- function(value1, value2, colorRampV1, colorRampV2) {
# Create a data frame for the small plot
data <- data.frame(
category = c('value1', 'value2'),
value = c(value1, value2)
)
# Create the small plot using geom_col and coord_polar
p <- ggplot(data, aes(x = category, y = c(0.5,0.5), fill = c(colorRampV1(value1), colorRampV2(value2)))) +
geom_col(width = 1) +
coord_polar(theta = "x", direction = -1) + # start at angle 0 to split the circle in half
theme_void() # remove axes and background
# Return the grob
ggplotGrob(p)
}
# Create a split circle grob with your chosen colors
my_grob <- create_half_circle_plot(1, 4, colorRampV1, colorRampV2)
# Draw the grob
grid.newpage()
grid.draw(my_grob)
create_half_circle_plot <- function(value1, value2, colorRampV1, colorRampV2) {
# Create a data frame for the small plot
data <- data.frame(
category = c('value1', 'value2'),
value = c(value1, value2)
)
# Create the small plot using geom_col and coord_polar
p <- ggplot(data, aes(x = category, y = c(0.5,0.5), fill = factor(c(colorRampV1(value1), colorRampV2(value2))))) +
geom_col(width = 1) +
coord_polar(theta = "x", direction = -1) + # start at angle 0 to split the circle in half
theme_void() # remove axes and background
# Return the grob
ggplotGrob(p)
}
# Create a split circle grob with your chosen colors
my_grob <- create_half_circle_plot(1, 4, colorRampV1, colorRampV2)
# Draw the grob
grid.newpage()
grid.draw(my_grob)
create_half_circle_plot <- function(value1, value2, colorRampV1, colorRampV2) {
# Create a data frame for the small plot
data <- data.frame(
category = c('value1', 'value2'),
value = c(value1, value2)
)
# Create the small plot using geom_col and coord_polar
p <- ggplot(data, aes(x = category, y = c(0.5,0.5), fill = colorRampV1)) +
geom_col(width = 1) +
coord_polar(theta = "x", direction = -1) + # start at angle 0 to split the circle in half
theme_void() # remove axes and background
# Return the grob
ggplotGrob(p)
}
# Create a split circle grob with your chosen colors
my_grob <- create_half_circle_plot(1, 4, colorRampV1, colorRampV2)
create_half_circle_plot <- function(value1, value2, colorRampV1, colorRampV2) {
# Create a data frame for the small plot
data <- data.frame(
category = c('value1', 'value2'),
value = c(value1, value2)
)
# Create the small plot using geom_col and coord_polar
p <- ggplot(data, aes(x = category, y = c(0.5,0.5), fill = c(colorRampV1(value1), colorRampV2(value2)))) +
geom_col(width = 1) +
coord_polar(theta = "x", direction = -1) + # start at angle 0 to split the circle in half
theme_void() + # remove axes and background
scale_colour_identity()
# Return the grob
ggplotGrob(p)
}
# Create a split circle grob with your chosen colors
my_grob <- create_half_circle_plot(1, 4, colorRampV1, colorRampV2)
# Draw the grob
grid.newpage()
grid.draw(my_grob)
ggplot(data = data.frame(x = c(1, 2, 3), y = c(1, 2, 3)), color = c("red", "blue", "orange"), aes(x = x, y = y)) +
geom_point() +
scale_colour_identity()
ggplot(data = data.frame(x = c(1, 2, 3), y = c(1, 2, 3)), fill = c("red", "blue", "orange"), aes(x = x, y = y)) +
geom_point() +
scale_colour_identity()
ggplot(data = data.frame(x = c(1, 2, 3), y = c(1, 2, 3) color = c("red", "blue", "orange")), aes(x = x, y = y, color = color)) +
ggplot(data = data.frame(x = c(1, 2, 3), y = c(1, 2, 3), color = c("red", "blue", "orange")), aes(x = x, y = y, color = color)) +
geom_point() +
scale_colour_identity()
create_half_circle_plot <- function(value1, value2, colorRampV1, colorRampV2) {
# Create a data frame for the small plot
data <- data.frame(
category = c('value1', 'value2'),
value = c(value1, value2),
color = c(colorRampV1(value1), colorRampV2(value2))
)
# Create the small plot using geom_col and coord_polar
p <- ggplot(data, aes(x = category, y = c(0.5,0.5), fill = color)) +
geom_col(width = 1) +
coord_polar(theta = "x", direction = -1) + # start at angle 0 to split the circle in half
theme_void() + # remove axes and background
scale_colour_identity()
# Return the grob
ggplotGrob(p)
}
# Create a split circle grob with your chosen colors
my_grob <- create_half_circle_plot(1, 4, colorRampV1, colorRampV2)
# Draw the grob
grid.newpage()
grid.draw(my_grob)
create_half_circle_plot <- function(value1, value2, colorRampV1, colorRampV2) {
# Create a data frame for the small plot
data <- data.frame(
category = c('value1', 'value2'),
value = c(value1, value2),
color = c("red", "blue")
# color = c(colorRampV1(value1), colorRampV2(value2))
)
# Create the small plot using geom_col and coord_polar
p <- ggplot(data, aes(x = category, y = c(0.5,0.5), fill = color)) +
geom_col(width = 1) +
coord_polar(theta = "x", direction = -1) + # start at angle 0 to split the circle in half
theme_void() + # remove axes and background
scale_colour_identity()
# Return the grob
ggplotGrob(p)
}
# Create a split circle grob with your chosen colors
my_grob <- create_half_circle_plot(1, 4, colorRampV1, colorRampV2)
# Draw the grob
grid.newpage()
grid.draw(my_grob)
create_half_circle_plot <- function(value1, value2, colorRampV1, colorRampV2) {
# Create a data frame for the small plot
color1 <- colorRampV1(value1)
color2 <- colorRampV2(value2)
data <- data.frame(
category = c('value1', 'value2'),
value = c(value1, value2),
color = c(color1, color2)
# color = c(colorRampV1(value1), colorRampV2(value2))
)
# Create the small plot using geom_col and coord_polar
p <- ggplot(data, aes(x = category, y = c(0.5,0.5), fill = color)) +
geom_col(width = 1) +
coord_polar(theta = "x", direction = -1) + # start at angle 0 to split the circle in half
theme_void() + # remove axes and background
scale_colour_identity()
# Return the grob
ggplotGrob(p)
}
# Create a split circle grob with your chosen colors
my_grob <- create_half_circle_plot(1, 4, colorRampV1, colorRampV2)
# Draw the grob
grid.newpage()
grid.draw(my_grob)
colorRampV1(1)
colorRampV2(4)
value1Max
# Create a split circle grob with your chosen colors
my_grob <- create_half_circle_plot(0.1, 0.9, colorRampV1, colorRampV2)
# Draw the grob
grid.newpage()
grid.draw(my_grob)
# Create a split circle grob with your chosen colors
my_grob <- create_half_circle_plot(0.1, 0.1, colorRampV1, colorRampV2)
# Draw the grob
grid.newpage()
grid.draw(my_grob)
create_half_circle_plot <- function(value1, value2, colorRampV1, colorRampV2) {
# Create a data frame for the small plot
color1 <- "#aabb11"
# color1 <- colorRampV1(value1)
color2 <- "#11bbaa"
# color2 <- colorRampV2(value2)
data <- data.frame(
category = c('value1', 'value2'),
value = c(value1, value2),
color = c(color1, color2)
# color = c(colorRampV1(value1), colorRampV2(value2))
)
# Create the small plot using geom_col and coord_polar
p <- ggplot(data, aes(x = category, y = c(0.5,0.5), fill = color)) +
geom_col(width = 1) +
coord_polar(theta = "x", direction = -1) + # start at angle 0 to split the circle in half
theme_void() + # remove axes and background
scale_colour_identity()
# Return the grob
ggplotGrob(p)
}
# Create a split circle grob with your chosen colors
my_grob <- create_half_circle_plot(0.1, 0.1, colorRampV1, colorRampV2)
# Draw the grob
grid.newpage()
grid.draw(my_grob)
create_half_circle_plot <- function(value1, value2, colorRampV1, colorRampV2) {
# Create a data frame for the small plot
color1 <- "#aabb11"
# color1 <- colorRampV1(value1)
color2 <- "#11bbaa"
# color2 <- colorRampV2(value2)
data <- data.frame(
category = c('value1', 'value2'),
value = c(value1, value2),
color = c(color1, color2)
# color = c(colorRampV1(value1), colorRampV2(value2))
)
# Create the small plot using geom_col and coord_polar
p <- ggplot(data, aes(x = category, y = c(0.5,0.5), colour = color)) +
geom_col(width = 1) +
coord_polar(theta = "x", direction = -1) + # start at angle 0 to split the circle in half
theme_void() + # remove axes and background
scale_colour_identity()
# Return the grob
ggplotGrob(p)
}
# Create a split circle grob with your chosen colors
my_grob <- create_half_circle_plot(0.1, 0.1, colorRampV1, colorRampV2)
# Draw the grob
grid.newpage()
grid.draw(my_grob)
create_half_circle_plot <- function(value1, value2, colorRampV1, colorRampV2) {
# Create a data frame for the small plot
color1 <- "#aabb11"
# color1 <- colorRampV1(value1)
color2 <- "#11bbaa"
# color2 <- colorRampV2(value2)
data <- data.frame(
category = c('value1', 'value2'),
value = c(value1, value2),
color = c(color1, color2)
# color = c(colorRampV1(value1), colorRampV2(value2))
)
# Create the small plot using geom_col and coord_polar
p <- ggplot(data, aes(x = category, y = c(0.5,0.5), fill = color)) +
geom_col(width = 1) +
coord_polar(theta = "x", direction = -1) + # start at angle 0 to split the circle in half
theme_void() + # remove axes and background
scale_fill_identity()
# Return the grob
ggplotGrob(p)
}
# Create a split circle grob with your chosen colors
my_grob <- create_half_circle_plot(0.1, 0.1, colorRampV1, colorRampV2)
# Draw the grob
grid.newpage()
grid.draw(my_grob)
create_half_circle_plot <- function(value1, value2, colorRampV1, colorRampV2) {
# Create a data frame for the small plot
color1 <- colorRampV1(value1)
color2 <- colorRampV2(value2)
data <- data.frame(
category = c('value1', 'value2'),
value = c(value1, value2),
color = c(color1, color2)
# color = c(colorRampV1(value1), colorRampV2(value2))
)
# Create the small plot using geom_col and coord_polar
p <- ggplot(data, aes(x = category, y = c(0.5,0.5), fill = color)) +
geom_col(width = 1) +
coord_polar(theta = "x", direction = -1) + # start at angle 0 to split the circle in half
theme_void() + # remove axes and background
scale_fill_identity()
# Return the grob
ggplotGrob(p)
}
# Create a split circle grob with your chosen colors
my_grob <- create_half_circle_plot(0.1, 0.1, colorRampV1, colorRampV2)
# Draw the grob
grid.newpage()
grid.draw(my_grob)
# Create a split circle grob with your chosen colors
my_grob <- create_half_circle_plot(0.9, 0.9, colorRampV1, colorRampV2)
# Draw the grob
grid.newpage()
grid.draw(my_grob)
# Base plot
p <- ggplot(df, aes(x, y)) +
theme_classic() # Remove axes and background
# Add split circles to the plot
for(i in 1:nrow(df)) {
p <- p + annotation_custom(
# 'custom',
grob = create_half_circle_plot(df$value1[i], df$value2[i], colorRampV1, colorRampV2),
xmin = df$x[i],
xmax = df$x[i],
ymin = df$y[i],
ymax = df$y[i]
)
}
# Show the plot
print(p)
# Base plot
p <- ggplot(df, aes(x, y)) +
theme_classic() # Remove axes and background
# Show the plot
print(p)
p <- p + annotation_custom(
grob = create_half_circle_plot(0.9, 0.9, colorRampV1, colorRampV2),
xmin = 0,
xmax = 0,
ymin = 0,
ymax = 0
)
# Show the plot
print(p)
p <- ggplot(df, aes(x, y)) +
theme_classic() # Remove axes and background
p <- p + annotation_custom(
grob = create_half_circle_plot(0.9, 0.9, colorRampV1, colorRampV2),
xmin = 1-0.5,
xmax = 1+0.5,
ymin = 3-0.5,
ymax = 3+0.5
)
# Show the plot
print(p)
# Show the plot
show(p)
df_new <- data.frame(x = 1:10, y = 1:10)
base <- ggplot(df_new, aes(x, y)) +
geom_blank() +
theme_bw()
# Full panel annotation
base + annotation_custom(
grob = grid::roundrectGrob(),
xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf
)
# Full panel annotation
base + annotation_custom(
grob = create_half_circle_plot(0.9, 0.9, colorRampV1, colorRampV2),
xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf
)
p <- ggplot(df, aes(x, y)) +
geom_blank() +
theme_classic() # Remove axes and background
p <- p + annotation_custom(
grob = create_half_circle_plot(0.9, 0.9, colorRampV1, colorRampV2),
xmin = 1-0.5,
xmax = 1+0.5,
ymin = 3-0.5,
ymax = 3+0.5
)
# Add split circles to the plot
for(i in 1:nrow(df)) {
p <- p + annotation_custom(
# 'custom',
grob = create_half_circle_plot(df$value1[i], df$value2[i], colorRampV1, colorRampV2),
xmin = df$x[i],
xmax = df$x[i],
ymin = df$y[i],
ymax = df$y[i]
)
}
# Show the plot
show(p)
p <- ggplot(df, aes(x, y)) +
geom_blank() +
theme_classic() # Remove axes and background
# p <- p + annotation_custom(
#   grob = create_half_circle_plot(0.9, 0.9, colorRampV1, colorRampV2),
#   xmin = 1-0.5,
#   xmax = 1+0.5,
#   ymin = 3-0.5,
#   ymax = 3+0.5
# )
# Add split circles to the plot
for(i in 1:nrow(df)) {
p <- p + annotation_custom(
# 'custom',
grob = create_half_circle_plot(df$value1[i], df$value2[i], colorRampV1, colorRampV2),
xmin = df$x[i],
xmax = df$x[i],
ymin = df$y[i],
ymax = df$y[i]
)
}
# Show the plot
show(p)
p <- ggplot(df, aes(x, y)) +
geom_blank() +
theme_classic() # Remove axes and background
# p <- p + annotation_custom(
#   grob = create_half_circle_plot(0.9, 0.9, colorRampV1, colorRampV2),
#   xmin = 1-0.5,
#   xmax = 1+0.5,
#   ymin = 3-0.5,
#   ymax = 3+0.5
# )
# Add split circles to the plot
for(i in 1:nrow(df)) {
p <- p + annotation_custom(
# 'custom',
grob = create_half_circle_plot(df$value1[i], df$value2[i], colorRampV1, colorRampV2),
xmin = df$x[i]-0.05,
xmax = df$x[i]+0.05,
ymin = df$y[i]-0.05,
ymax = df$y[i]+0.05
)
}
# Show the plot
show(p)
setwd("E:/programming/stamps/src/crawling")
stamp_info <- read.csv("./csv_files/all_stamps_info_concat.csv")
head(stamp_info)
# sort by Used column
stamp_info <- stamp_info[order(stamp_info$Used),]
head(stamp_info)
# remove all rows where Used is "-"
stamp_info <- stamp_info[stamp_info$Used != "-",]
# convert Used to numeric
stamp_info$Used <- as.numeric(stamp_info$Used)
head(stamp_info)
# sort by Used column
stamp_info <- stamp_info[order(stamp_info$Used),]
head(stamp_info)
# sort by Used column
stamp_info <- stamp_info[rev(order(stamp_info$Used)),]
head(stamp_info)
stamp_info <- read.csv("./csv_files/all_stamps_info_concat.csv")
# remove all rows where Used is "-"
stamp_info <- stamp_info[stamp_info$Used != "-",]
stamp_info[946895,]
stamp_info <- read.csv("./csv_files/all_stamps_info_concat.csv")
stamp_info[946895,]
# remove all rows where Used is "-"
stamp_info <- stamp_info[stamp_info$Used != "-",]
# remove all "," from Used column
stamp_info$Used <- gsub(",", "", stamp_info$Used)
# convert Used to numeric
stamp_info$Used <- as.numeric(stamp_info$Used)
# sort by Used column
stamp_info <- stamp_info[rev(order(stamp_info$Used)),]
head(stamp_info)
head(stamp_info)
gc()
gc()
